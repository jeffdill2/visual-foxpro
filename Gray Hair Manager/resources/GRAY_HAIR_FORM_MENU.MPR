*       *********************************************************
*       *                                                         
*       * 07/31/12       GRAY_HAIR_FORM_MENU.MPR        09:01:29  
*       *                                                         
*       *********************************************************
*       *                                                         
*       * Author's Name                                           
*       *                                                         
*       * Copyright (C) 2012 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This PROGRAM was automatically generated BY GENMENU.    
*       *                                                         
*       *********************************************************

* To attach this menu to your Top-Level form, 
* call it from the Init event of the form:

* Syntax: DO <mprname> WITH <oFormRef> [,<cMenuname>|<lRename>][<lUniquePopups>]

*	oFormRef - form object reference (THIS)
*	cMenuname - name for menu (this is required for Append menus - see below)
*	lRename - renames Name property of your form
*	lUniquePopups - determines whether to generate unique ids for popup names
			
* 	example:

*	PROCEDURE Init
*		DO mymenu.mpr WITH THIS,.T.
*	ENDPROC

* Use the optional 2nd parameter if you plan on running multiple instances
* of your Top-Level form. The preferred method is to create an empty string
* variable and pass it by reference so you can receive the form name after
* the MPR file is run. You can later use this reference to destroy the menu.

*	PROCEDURE Init
*		LOCAL cGetMenuName
*		cGetMenuName = ""
*		DO mymenu.mpr WITH THIS, m.cGetMenuName
*	ENDPROC

* The logical lRename parameter will change the name property of your 
* form to the same name given the menu and may cause conflicts in your 
* code if you directly reference the form by name.

* You will also need to remove the menu when the form is destroyed so that it does 
* not remain in memory unless you wish to reactivate it later in a new form.

* If you passed the optional lRename parameter as .T. as in the above example, 
* you can easily remove the menu in the form's Destroy event as shown below.
* This strategy is ideal when using multiple instances of Top-Level forms.

*	example:

*	PROCEDURE Destroy
*		RELEASE MENU (THIS.Name) EXTENDED
*	ENDPROC

* Using Append/Before/After location options:

*   You might want to append a menu to an existing Top-Level form by setting 
*   the Location option in the General Options dialog. In order to do this, you 
*   must pass the name of the menu in which to attach the new one. The second
*   parameter is required here. If you originally created the menu with the lRename 
*   parameter = .T., then you can update the menu with code similar to the following:

*	example:

*	DO mymenu2.mpr WITH THISFORM,THISFORM.name
*
* Using lUniquePopups:

*   If you are running this menu multiple times in your application, such as in multiple 
*   instances of the same top-level form, you should pass .T. to the lUniquePopups 
*   parameter so that unique popup names are generated to avoid possible conflicts.

*	example:

*	PROCEDURE Init
*		DO mymenu.mpr WITH THIS,.T.,.T.
*	ENDPROC
*
* Note: Parm4-Parm9 are not reserved and freely available for use with your menu code.
*

LPARAMETERS oFormRef, getMenuName, lUniquePopups, parm4, parm5, parm6, parm7, parm8, parm9
LOCAL cMenuName, nTotPops, a_menupops, cTypeParm2, cSaveFormName
IF TYPE("m.oFormRef") # "O" OR ;
  LOWER(m.oFormRef.BaseClass) # 'form' OR ;
  m.oFormRef.ShowWindow # 2
	MESSAGEBOX([This menu can only be called from a Top-Level form. Ensure that your form's ShowWindow property is set to 2. Read the header section of the menu's MPR file for more details.])
	RETURN
ENDIF
m.cTypeParm2 = TYPE("m.getMenuName")
m.cMenuName = SYS(2015)
m.cSaveFormName = m.oFormRef.Name
IF m.cTypeParm2 = "C" OR (m.cTypeParm2 = "L" AND m.getMenuName)
	m.oFormRef.Name = m.cMenuName
ENDIF
IF m.cTypeParm2 = "C" AND !EMPTY(m.getMenuName)
	m.cMenuName = m.getMenuName
ENDIF
DIMENSION a_menupops[2]
IF TYPE("m.lUniquePopups")="L" AND m.lUniquePopups
	FOR nTotPops = 1 TO ALEN(a_menupops)
		a_menupops[m.nTotPops]= SYS(2015)
	ENDFOR
ELSE
	a_menupops[1]="admin"
	a_menupops[2]="storeddata"
ENDIF


*       *********************************************************
*       *                                                         
*       *                      Menu Definition                    
*       *                                                         
*       *********************************************************
*

DEFINE MENU (m.cMenuName) IN (m.oFormRef.Name) BAR

DEFINE PAD padAdminDropdown OF (m.cMenuName) PROMPT "Admin" COLOR SCHEME 3 ;
	KEY ALT+A, ""
DEFINE PAD padStoredDataDropdown OF (m.cMenuName) PROMPT "Stored Data" COLOR SCHEME 3 ;
	KEY ALT+S, ""
ON PAD padAdminDropdown OF (m.cMenuName) ACTIVATE POPUP (a_menupops[1])
ON PAD padStoredDataDropdown OF (m.cMenuName) ACTIVATE POPUP (a_menupops[2])

DEFINE POPUP (a_menupops[1]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR 1 OF (a_menupops[1]) PROMPT "Existing User List..."
DEFINE BAR 2 OF (a_menupops[1]) PROMPT "Existing Jobs List..."
DEFINE BAR 3 OF (a_menupops[1]) PROMPT "Processed Files List..."
ON SELECTION BAR 1 OF (a_menupops[1]) ;
	DO _3k90jcd28 ;
	IN LOCFILE("RESOURCES\GRAY_HAIR_FORM_MENU" ,"MPX;MPR|FXP;PRG" ,"WHERE is GRAY_HAIR_FORM_MENU?")
ON SELECTION BAR 2 OF (a_menupops[1]) ;
	DO _3k90jcd29 ;
	IN LOCFILE("RESOURCES\GRAY_HAIR_FORM_MENU" ,"MPX;MPR|FXP;PRG" ,"WHERE is GRAY_HAIR_FORM_MENU?")
ON SELECTION BAR 3 OF (a_menupops[1]) ;
	DO _3k90jcd2a ;
	IN LOCFILE("RESOURCES\GRAY_HAIR_FORM_MENU" ,"MPX;MPR|FXP;PRG" ,"WHERE is GRAY_HAIR_FORM_MENU?")

DEFINE POPUP (a_menupops[2]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR 1 OF (a_menupops[2]) PROMPT "Edit Job Info..."
DEFINE BAR 2 OF (a_menupops[2]) PROMPT "Edit Processed Files..."
DEFINE BAR 3 OF (a_menupops[2]) PROMPT "Edit Program Info..."
DEFINE BAR 4 OF (a_menupops[2]) PROMPT "Edit User Info..."
ON SELECTION BAR 1 OF (a_menupops[2]) ;
	DO _3k90jcd2b ;
	IN LOCFILE("RESOURCES\GRAY_HAIR_FORM_MENU" ,"MPX;MPR|FXP;PRG" ,"WHERE is GRAY_HAIR_FORM_MENU?")
ON SELECTION BAR 2 OF (a_menupops[2]) ;
	DO _3k90jcd2c ;
	IN LOCFILE("RESOURCES\GRAY_HAIR_FORM_MENU" ,"MPX;MPR|FXP;PRG" ,"WHERE is GRAY_HAIR_FORM_MENU?")
ON SELECTION BAR 3 OF (a_menupops[2]) ;
	DO _3k90jcd2d ;
	IN LOCFILE("RESOURCES\GRAY_HAIR_FORM_MENU" ,"MPX;MPR|FXP;PRG" ,"WHERE is GRAY_HAIR_FORM_MENU?")
ON SELECTION BAR 4 OF (a_menupops[2]) ;
	DO _3k90jcd2e ;
	IN LOCFILE("RESOURCES\GRAY_HAIR_FORM_MENU" ,"MPX;MPR|FXP;PRG" ,"WHERE is GRAY_HAIR_FORM_MENU?")

ACTIVATE MENU (m.cMenuName) NOWAIT

IF m.cTypeParm2 = "C"
	m.getMenuName = m.cMenuName
	m.oFormRef.Name = m.cSaveFormName 
ENDIF


*       *********************************************************
*       *                                                         
*       * _3K90JCD28  ON SELECTION BAR 1 OF POPUP admin           
*       *                                                         
*       * Procedure Origin:                                       
*       *                                                         
*       * From Menu:  GRAY_HAIR_FORM_MENU.MPR,            Record:    5 
*       * Called By:  ON SELECTION BAR 1 OF POPUP admin           
*       * Prompt:     Existing User List...                       
*       * Snippet:    1                                           
*       *                                                         
*       *********************************************************
*
PROCEDURE _3k90jcd28
************************************************************
**** RETRIEVING/SETTING EXISTING JOBS LIST/INITIAL VARIABLES
************************************************************
USE ADDBS(ALLTRIM(JUSTPATH(SYS(16,0)))) + "resources\gray_hair_program_info.dbf" IN 0 ALIAS menu_program_info
SELECT menu_program_info

NOTE: Deciding what location the GETFILE prompt will default to.
strCurrentUserListPath = "c:"
strCurrentUserList = ""
strExistingUserList = ""

IF RECCOUNT("menu_program_info") > 0 THEN
	strCurrentUserList = ALLTRIM(menu_program_info.user_list)
	
	IF !EMPTY(strCurrentUserList) AND FILE(strCurrentUserList) THEN
		strCurrentUserListPath = "'" + JUSTPATH(strCurrentUserList) + "'"
	ENDIF
ENDIF

CD &strCurrentUserListPath

NOTE: Retrieving a new file, if one is selected
strExistingUserList = ALLTRIM(GETFILE("DBF","DBF to use:","Select",0,"Existing User List"))

IF EMPTY(strExistingUserList) THEN
	IF !EMPTY(strCurrentUserList)
		strExistingUserList = strCurrentUserList
	ENDIF
ENDIF

IF !EMPTY(strExistingUserList) THEN
	IF RECCOUNT("menu_program_info") = 0 THEN
		APPEND BLANK
	ENDIF
	
	replace user_list WITH strExistingUserList
ENDIF

BROWSE NOWAIT
CLOSE TABLES ALL


*       *********************************************************
*       *                                                         
*       * _3K90JCD29  ON SELECTION BAR 2 OF POPUP admin           
*       *                                                         
*       * Procedure Origin:                                       
*       *                                                         
*       * From Menu:  GRAY_HAIR_FORM_MENU.MPR,            Record:    6 
*       * Called By:  ON SELECTION BAR 2 OF POPUP admin           
*       * Prompt:     Existing Jobs List...                       
*       * Snippet:    2                                           
*       *                                                         
*       *********************************************************
*
PROCEDURE _3k90jcd29
************************************************************
**** RETRIEVING/SETTING EXISTING JOBS LIST/INITIAL VARIABLES
************************************************************
USE ADDBS(ALLTRIM(JUSTPATH(SYS(16,0)))) + "resources\gray_hair_program_info.dbf" IN 0 ALIAS menu_program_info
SELECT menu_program_info

NOTE: Deciding what location the GETFILE prompt will default to.
strCurrentJobsListPath = "c:"
strCurrentJobsList = ""
strExistingJobsList = ""

IF RECCOUNT("menu_program_info") > 0 THEN
	strCurrentJobsList = ALLTRIM(menu_program_info.jobs_list)
	
	IF !EMPTY(strCurrentJobsList) AND FILE(strCurrentJobsList) THEN
		strCurrentJobsListPath = "'" + JUSTPATH(strCurrentJobsList) + "'"
	ENDIF
ENDIF

CD &strCurrentJobsListPath

NOTE: Retrieving a new file, if one is selected
strExistingJobsList = ALLTRIM(GETFILE("DBF","DBF to use:","Select",0,"Existing Jobs List"))

IF EMPTY(strExistingJobsList) THEN
	IF !EMPTY(strCurrentJobsList)
		strExistingJobsList = strCurrentJobsList
	ENDIF
ENDIF

IF !EMPTY(strExistingJobsList) THEN
	IF RECCOUNT("menu_program_info") = 0 THEN
		APPEND BLANK
	ENDIF
	
	replace jobs_list WITH strExistingJobsList
ENDIF

BROWSE NOWAIT
CLOSE TABLES ALL


*       *********************************************************
*       *                                                         
*       * _3K90JCD2A  ON SELECTION BAR 3 OF POPUP admin           
*       *                                                         
*       * Procedure Origin:                                       
*       *                                                         
*       * From Menu:  GRAY_HAIR_FORM_MENU.MPR,            Record:    7 
*       * Called By:  ON SELECTION BAR 3 OF POPUP admin           
*       * Prompt:     Processed Files List...                     
*       * Snippet:    3                                           
*       *                                                         
*       *********************************************************
*
PROCEDURE _3k90jcd2a
************************************************************
**** RETRIEVING/SETTING EXISTING JOBS LIST/INITIAL VARIABLES
************************************************************
USE ADDBS(ALLTRIM(JUSTPATH(SYS(16,0)))) + "resources\gray_hair_program_info.dbf" IN 0 ALIAS menu_program_info
SELECT menu_program_info

NOTE: Deciding what location the GETFILE prompt will default to.
strCurrentFilesListPath = "c:"
strCurrentFilesList = ""
strExistingFilesList = ""

IF RECCOUNT("menu_program_info") > 0 THEN
	strCurrentFilesList = ALLTRIM(menu_program_info.processed)
	
	IF !EMPTY(strCurrentFilesList) AND FILE(strCurrentFilesList) THEN
		strCurrentFilesListPath = "'" + JUSTPATH(strCurrentFilesList) + "'"
	ENDIF
ENDIF

CD &strCurrentFilesListPath

NOTE: Retrieving a new file, if one is selected
strExistingFilesList = ALLTRIM(GETFILE("DBF","DBF to use:","Select",0,"Processed Files List"))

IF EMPTY(strExistingFilesList) THEN
	IF !EMPTY(strCurrentFilesList)
		strExistingFilesList = strCurrentFilesList
	ENDIF
ENDIF

IF !EMPTY(strExistingFilesList) THEN
	IF RECCOUNT("menu_program_info") = 0 THEN
		APPEND BLANK
	ENDIF
	
	replace processed WITH strExistingFilesList
ENDIF

BROWSE NOWAIT
CLOSE TABLES ALL


*       *********************************************************
*       *                                                         
*       * _3K90JCD2B  ON SELECTION BAR 1 OF POPUP storeddata      
*       *                                                         
*       * Procedure Origin:                                       
*       *                                                         
*       * From Menu:  GRAY_HAIR_FORM_MENU.MPR,            Record:   10 
*       * Called By:  ON SELECTION BAR 1 OF POPUP storeddata      
*       * Prompt:     Edit Job Info...                            
*       * Snippet:    4                                           
*       *                                                         
*       *********************************************************
*
PROCEDURE _3k90jcd2b
************************************************************
****************************** RETRIEVING THE JOB INFO TABLE
************************************************************
USE ADDBS(ALLTRIM(JUSTPATH(SYS(16,0)))) + "resources\gray_hair_program_info.dbf" IN 0 ALIAS menu_program_info
SELECT menu_program_info

strJobInfoDBF = ALLTRIM(menu_program_info.jobs_list)
USE

IF !FILE(strJobInfoDBF) THEN
	MESSAGEBOX("The Job Info DBF cannot be found.",0,"Job Info DBF not found")
	RELEASE ALL
	CLOSE ALL
	RETURN
ENDIF

USE (strJobInfoDBF)

BROWSE NOMENU NOAPPEND TITLE "CLOSE WINDOW WHEN DONE EDITING..."
CLOSE TABLES ALL

USE (strJobInfoDBF) IN 0 ALIAS menu_job_info
SELECT menu_job_info

PACK IN menu_job_info
USE


*       *********************************************************
*       *                                                         
*       * _3K90JCD2C  ON SELECTION BAR 2 OF POPUP storeddata      
*       *                                                         
*       * Procedure Origin:                                       
*       *                                                         
*       * From Menu:  GRAY_HAIR_FORM_MENU.MPR,            Record:   11 
*       * Called By:  ON SELECTION BAR 2 OF POPUP storeddata      
*       * Prompt:     Edit Processed Files...                     
*       * Snippet:    5                                           
*       *                                                         
*       *********************************************************
*
PROCEDURE _3k90jcd2c
************************************************************
****************************** RETRIEVING THE JOB INFO TABLE
************************************************************
USE ADDBS(ALLTRIM(JUSTPATH(SYS(16,0)))) + "resources\gray_hair_program_info.dbf" IN 0 ALIAS menu_program_info
SELECT menu_program_info

strProcessedFilesDBF = ALLTRIM(menu_program_info.processed)
USE

IF !FILE(strProcessedFilesDBF) THEN
	MESSAGEBOX("The Processed Files DBF cannot be found.",0,"Processed Files DBF not found")
	RELEASE ALL
	CLOSE ALL
	RETURN
ENDIF

USE (strProcessedFilesDBF)

BROWSE NOMENU NOAPPEND TITLE "CLOSE WINDOW WHEN DONE EDITING..."
CLOSE TABLES ALL

USE (strProcessedFilesDBF) IN 0 ALIAS menu_processed_files
SELECT menu_processed_files

PACK IN menu_processed_files
USE


*       *********************************************************
*       *                                                         
*       * _3K90JCD2D  ON SELECTION BAR 3 OF POPUP storeddata      
*       *                                                         
*       * Procedure Origin:                                       
*       *                                                         
*       * From Menu:  GRAY_HAIR_FORM_MENU.MPR,            Record:   12 
*       * Called By:  ON SELECTION BAR 3 OF POPUP storeddata      
*       * Prompt:     Edit Program Info...                        
*       * Snippet:    6                                           
*       *                                                         
*       *********************************************************
*
PROCEDURE _3k90jcd2d
************************************************************
*************************************** EDITING PROGRAM INFO
************************************************************
USE ADDBS(ALLTRIM(JUSTPATH(SYS(16,0)))) + "resources\gray_hair_program_info.dbf"

BROWSE NOMENU NOAPPEND NODELETE TITLE "CLOSE WINDOW WHEN DONE EDITING..."


*       *********************************************************
*       *                                                         
*       * _3K90JCD2E  ON SELECTION BAR 4 OF POPUP storeddata      
*       *                                                         
*       * Procedure Origin:                                       
*       *                                                         
*       * From Menu:  GRAY_HAIR_FORM_MENU.MPR,            Record:   13 
*       * Called By:  ON SELECTION BAR 4 OF POPUP storeddata      
*       * Prompt:     Edit User Info...                           
*       * Snippet:    7                                           
*       *                                                         
*       *********************************************************
*
PROCEDURE _3k90jcd2e
************************************************************
****************************************** EDITING USER INFO
************************************************************
USE ADDBS(ALLTRIM(JUSTPATH(SYS(16,0)))) + "resources\gray_hair_program_info.dbf" IN 0 ALIAS menu_program_info
SELECT menu_program_info

strUserInfoDBF = ALLTRIM(menu_program_info.user_list)
USE

IF !FILE(strUserInfoDBF) THEN
	MESSAGEBOX("The User Info DBF cannot be found.",0,"User Info DBF not found")
	RELEASE ALL
	CLOSE ALL
	RETURN
ENDIF

USE (strUserInfoDBF)

BROWSE NOMENU NOAPPEND TITLE "CLOSE WINDOW WHEN DONE EDITING..."
CLOSE TABLES ALL

USE (strUserInfoDBF) IN 0 ALIAS menu_user_info
SELECT menu_user_info

PACK IN menu_user_info
USE
